apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.alibaba.arouter'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'androidx.core:core-ktx:1.3.1'
    api 'androidx.appcompat:appcompat:1.1.0'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    api 'com.google.android.material:material:1.1.0'

    api 'androidx.viewpager2:viewpager2:1.0.0'



    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.annotation:annotation:1.1.0'
    testApi 'junit:junit:4.13'
    androidTestApi 'androidx.test.ext:junit:1.1.1'
    androidTestApi 'androidx.test.espresso:espresso-core:3.2.0'


    //==========================jetpack 工具库====================start=============================
    //导航库
    def navigation_version = "2.3.0"
    api "androidx.navigation:navigation-fragment:$navigation_version"
    api "androidx.navigation:navigation-ui:$navigation_version"
    api "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    api "androidx.navigation:navigation-ui-ktx:$navigation_version"

    //生命周期组件（包括viewModel）
    def lifecycle_version = "2.2.0"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"


    //live_data



    //coroutine  协程



    //work_manager 工作后台
    def work_manager_version = "2.4.0"
    api "androidx.work:work-runtime:$work_manager_version"



    //==========================jetpack 工具库=========================end========================



    //ARouter 路由 注意！arouter-compiler 这个依赖必须在build.gradle中声明，只在base_module中声明然后引用base_module中引用是无效的！
    api 'com.alibaba:arouter-api:1.5.0'
    kapt  'com.alibaba:arouter-compiler:1.2.2'

    //其他需要的第三方组件
    //常用工具类
    api 'com.blankj:utilcodex:1.29.0'
    //权限
    api 'com.permissionx.guolindev:permissionx:1.2.2'



}